{"version":3,"sources":["components/Filter.js","services/persons.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","setFilter","value","onChange","event","target","baseUrl","axios","get","then","response","data","newObject","post","updatedObject","put","id","delete","Person","person","persons","setPersons","setMessage","className","name","number","onClick","find","p","window","confirm","personService","text","class","catch","error","setTimeout","deletePerson","Persons","e","toLowerCase","includes","map","key","PersonForm","useState","newName","setNewName","newNumber","setNewNumber","updatePersons","message","onSubmit","preventDefault","some","personToUpdate","updatedPerson","concat","newPerson","length","createdPerson","type","Notification","App","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21b6e20d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value)\r\n    }  \r\n\r\n    return (\r\n        <div>filter shown with <input value={filter} onChange={handleFilterChange}/></div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = updatedObject => {\r\n  const request = axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteIt = id => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deleteIt }","import React from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst Person = ({ person, persons, setPersons, setMessage }) => {\r\n\r\n    const deletePerson = (id) => {\r\n        const person = persons.find(p => p.id === id)\r\n        if (window.confirm(`Delete ${person.name}?`)) {\r\n            personService\r\n                .deleteIt(person.id).then(response => {\r\n                    setMessage({ text: `Deleted '${person.name}'`, class: 'info' })\r\n                })\r\n                .catch(error => {\r\n                    setMessage({ text: `${error.response.data.error}`, class: 'error' })\r\n                })\r\n            setPersons(persons.filter(p => p.id !== id))\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n            }, 3000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li className='person'>\r\n            {person.name} {person.number} <button onClick={() => deletePerson(person.id)}>Delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, filter, setPersons, setMessage }) => {\r\n  return (\r\n    <ul>\r\n      {persons.filter(e => e.name.toLowerCase().includes(filter.toLowerCase())).map(person =>\r\n        <Person key={person.id}\r\n                person={person}\r\n                persons={persons}\r\n                setPersons={setPersons}\r\n                setMessage={setMessage}/>\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import React, { useState } from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst PersonForm = ({ persons, setPersons, setMessage }) => {\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n\r\n  const updatePersons = (persons, message) => {\r\n    setPersons(persons)\r\n    setNewName('')\r\n    setNewNumber('')\r\n    setMessage({ text: message, class: 'info' })\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n    }, 3000)\r\n  }\r\n\r\n  const addEntry = (event) => {\r\n    event.preventDefault()\r\n    if (persons.some(e => e.name === newName)) {\r\n      let personToUpdate = { ...persons.find(e => e.name === newName) }\r\n      if (window.confirm(`${personToUpdate.name} is already added to phonebook, replace the old number with a new one?`)) {\r\n        personToUpdate.number = newNumber\r\n        personService.update(personToUpdate)\r\n          .then(updatedPerson => {\r\n            updatePersons(persons.filter(e => e.name !== newName).concat(updatedPerson),\r\n              `Updated '${updatedPerson.name}'`)\r\n          })\r\n          .catch(error => {\r\n            setMessage({ text: `${error.response.data.error}`, class: 'error' })\r\n          })\r\n      }\r\n    } else {\r\n      const newPerson = {\r\n        id: persons.length + 1,\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n      personService.create(newPerson)\r\n        .then(createdPerson => {\r\n          updatePersons(persons.concat(createdPerson),\r\n            `Added '${createdPerson.name}'`)\r\n        })\r\n        .catch(error => {\r\n          setMessage({ text: `${error.response.data.error}`, class: 'error' })\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={addEntry}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={message.class}>\r\n        {message.text}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  const hook = () => {\n    personService.getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }\n\n  useEffect(hook, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter filter={filter} setFilter={setFilter} />\n      <h2>add a new</h2>\n      <PersonForm persons={persons} setPersons={setPersons} setMessage={setMessage} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} setPersons={setPersons} setMessage={setMessage}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}